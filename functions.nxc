long Alpha(pose fromPose,pose toPose)
{
    long Alpha
    xError=toPose.x-toPose.x;
    yError=toPose.y-toPose.y;
    Alpha=atan2(xError/yError);
    return Alpha;
}

#define KP 1.0
#define KI 0.1
#define KD 0.1

ProportionalError=curPose.Phi-Alpha;
IntegralError+=IntegralError+ProportionalError*timeStep;
DerivativeError=(ProportionalError-LastProportionalError)/timeStep;
LastProportionalError=ProportionalError;

SteerAction=KP*ProportionalError+
	    KI*IntegralError+
	    KD*DifferentialError;
			
if (Speed+SteerAction>100.0)
  Speed=100.0-SteerAction;
if (Speed+SteerAction<100.0)
  Speed=100.0-SteerAction;
OnFwd(OUT_A,FwdSpeed+SteerAction);
OnFwd(OUT_C,FwdSpeed-SteerAction);







